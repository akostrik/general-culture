## Pipe
* однонаправленный канал между процессами, который позволяет одному процессу пересылать данные другому, без необходимости создавать файлы на диске
* когда пайп рвется, процесс, который пытается туда писать получает SIGPIPE\
* Наиболее простой вариант пайпа создает шелл Unix, между программами, запускаемыми из командной строки, разделенными символом «|»
  + `dmesg | less` создает пайп от программы dmesg к программе постраничного просмотра less
    - если less завершится, прежде чем получит весь вывод dmesg, dmesg будет преждевременно завершена сигналом SIGPIPE

## Socket
* сетевое соединение
* программа, работающая с сокетом, может получить SIGPIPE
  + например, при работе по протоколу TCP

## Сигнал в Unix 
* асинхронное уведомление процесса о каком-либо событии
* один из основных способов взаимодействия между процессами
* когда сигнал послан процессу, операционная система прерывает выполнение процесса
  + если процесс установил собственный обработчик сигнала, операционная система запускает этот обработчик, передав ему информацию о сигнале
  + если процесс не установил обработчик, то выполняется обработчик по умолчанию

## SIGPIPE
* сигнал, посылаемый процессу при записи в соединение (пайп, сокет) при отсутствии или обрыве соединения с другой (читающей) стороной

## SIGINT
* сигнал для остановки процесса пользователем с терминала
* в POSIX-системах
* посылается программе, выполняемой на терминале
* Ctrl+C

## SIGQUIT 
* в POSIX-системах
* для остановки и указывающий, что система должна выполнить дамп памяти для процесса
* обычно — Ctrl+\, в Linux также Ctrl+4, или SysRq на виртуальном терминале

## SIGTERM
* в POSIX-системах 
* для запроса завершения процесса
* посылается процессу утилитой kill по умолчанию
* в отличие от SIGKILL этот сигнал может быть обработан или проигнорирован программой
